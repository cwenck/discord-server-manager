name: Continuous Integration

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo Check
        uses: actions-rs/cargo@v1
        with:
          command: check

  format:
    name: Format
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Checkout Code 
        uses: actions/checkout@v2

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Cargo Code Formatter Version
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --version

      - name: Cargo Code Format Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Static Analysis
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Checkout Code 
        uses: actions/checkout@v2

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Cargo Clippy Version
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --version

      - name: Cargo Clippy Check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [format, clippy]

    steps:
      - name: Checkout Code 
        uses: actions/checkout@v2

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code 
        uses: actions/checkout@v2

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Authenticate with Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build & Push Container Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          cache-from: type=registry,ref=cwenck/discord-server-manager:latest-snapshot
          cache-to: type=inline
          tags: cwenck/discord-server-manager:latest-snapshot

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      
